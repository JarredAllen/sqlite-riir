[package]
name = "sqlite-riir"
version = "0.1.0"
edition = "2021"

[dependencies]
anyhow = "1.0.86"
rustyline = "14.0.0"
sqlparser = "0.50.0"

[lints.rust]
unsafe_op_in_unsafe_fn = "warn"
macro_use_extern_crate = "warn"
meta_variable_misuse = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unused_crate_dependencies = "warn"
unused_lifetimes = "warn"
unused_macro_rules = "warn"
unused_qualifications = "warn"

[lints.clippy]
# Deny `pedantic` by default and allow things I want to allow
pedantic = { level = "warn", priority = -1 }
# Default pedantic is overly strict imo
cast_possible_truncation = "allow"
cast_possible_wrap = "allow"
cast_precision_loss = "allow"
cast_sign_loss = "allow"
items_after_statements = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
module_name_repetitions = "allow"
too_many_lines = "allow"

# Pick the "restriction" lints we want to deny
as_underscore = "warn"
dbg_macro = "warn"
empty_structs_with_brackets = "warn"
exit = "warn"
float_cmp_const = "warn"
fn_to_numeric_cast_any = "warn"
if_then_some_else_none = "warn"
lossy_float_literal = "warn"
map_err_ignore = "warn"
missing_assert_message = "warn"
mixed_read_write_in_expression = "warn"
mod_module_files = "warn"
multiple_unsafe_ops_per_block = "warn"
mutex_atomic = "warn"
panic_in_result_fn = "warn"
print_stderr = "warn"
print_stdout = "warn"
rest_pat_in_fully_bound_structs = "warn"
string_lit_chars_any = "warn"
string_to_string = "warn"
suspicious_xor_used_as_pow = "warn"
tests_outside_test_module = "warn"
try_err = "warn"
undocumented_unsafe_blocks = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
unseparated_literal_suffix = "warn"
